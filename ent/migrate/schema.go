// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ListColumns holds the columns for the "list" table.
	ListColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "last_modified", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "theme_id", Type: field.TypeInt64},
	}
	// ListTable holds the schema information for the "list" table.
	ListTable = &schema.Table{
		Name:       "list",
		Columns:    ListColumns,
		PrimaryKey: []*schema.Column{ListColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "list_theme_list",
				Columns:    []*schema.Column{ListColumns[5]},
				RefColumns: []*schema.Column{ThemeColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TaskColumns holds the columns for the "task" table.
	TaskColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "reminder", Type: field.TypeTime, Nullable: true},
		{Name: "repeat", Type: field.TypeString, Nullable: true},
		{Name: "subtasks", Type: field.TypeString},
		{Name: "is_completed", Type: field.TypeBool, Default: false},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "last_modified", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "list_id", Type: field.TypeString},
	}
	// TaskTable holds the schema information for the "task" table.
	TaskTable = &schema.Table{
		Name:       "task",
		Columns:    TaskColumns,
		PrimaryKey: []*schema.Column{TaskColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "task_list_task",
				Columns:    []*schema.Column{TaskColumns[10]},
				RefColumns: []*schema.Column{ListColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ThemeColumns holds the columns for the "theme" table.
	ThemeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "primary", Type: field.TypeString},
		{Name: "secondary", Type: field.TypeString, Nullable: true},
	}
	// ThemeTable holds the schema information for the "theme" table.
	ThemeTable = &schema.Table{
		Name:       "theme",
		Columns:    ThemeColumns,
		PrimaryKey: []*schema.Column{ThemeColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ListTable,
		TaskTable,
		ThemeTable,
	}
)

func init() {
	ListTable.ForeignKeys[0].RefTable = ThemeTable
	ListTable.Annotation = &entsql.Annotation{
		Table: "list",
	}
	TaskTable.ForeignKeys[0].RefTable = ListTable
	TaskTable.Annotation = &entsql.Annotation{
		Table: "task",
	}
	ThemeTable.Annotation = &entsql.Annotation{
		Table: "theme",
	}
}
